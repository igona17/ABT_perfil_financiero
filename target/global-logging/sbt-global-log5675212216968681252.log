[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eduro\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eduro\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_291)
[debug]       Load.loadUnit: plugins took 101.3646ms
[debug]       Load.loadUnit: defsScala took 0.2711ms
[debug] [Loading] Scanning directory C:\Users\eduro\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eduro\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.3107 ms
[debug]           Load.resolveProject(global-plugins) took 53.1256ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eduro\.sbt\1.0\plugins, plugins: List(<none>))) took 98.8013ms
[debug] [Loading] Done in C:\Users\eduro\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 123.8216ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3318ms
[debug]     Load.loadUnit(file:/C:/Users/eduro/.sbt/1.0/plugins/, ...) took 235.4845ms
[debug]   Load.apply: load took 626.0872ms
[debug]   Load.apply: resolveProjects took 14.2482ms
[debug]   Load.apply: finalTransforms took 80.3012ms
[debug]   Load.apply: config.delegates took 15.2958ms
[debug]   Load.apply: Def.make(settings)... took 456.1919ms
[debug]   Load.apply: structureIndex took 146.1208ms
[debug]   Load.apply: mkStreams took 2.8664ms
[info] loading global plugins from C:\Users\eduro\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7569.7092ms
[debug]           Load.loadUnit: plugins took 24.0797ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory E:\Escritorio\Nova\abt-bancos-zona-qua\project
[debug]             Load.loadUnit: mkEval took 12.3664ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Escritorio\Nova\abt-bancos-zona-qua\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6569 ms
[info] loading settings for project abt-bancos-zona-qua-build from idea2.sbt ...
[debug]               Load.resolveProject(abt-bancos-zona-qua-build) took 3.1062ms
[debug]             Load.loadTransitive: finalizeProject(Project(id abt-bancos-zona-qua-build, base: E:\Escritorio\Nova\abt-bancos-zona-qua\project, plugins: List(<none>))) took 6.6665ms
[debug] [Loading] Done in E:\Escritorio\Nova\abt-bancos-zona-qua\project, returning: (abt-bancos-zona-qua-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 189.4253ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4424ms
[debug]         Load.loadUnit(file:/E:/Escritorio/Nova/abt-bancos-zona-qua/project/, ...) took 219.0227ms
[debug]       Load.apply: load took 220.6568ms
[debug]       Load.apply: resolveProjects took 0.1422ms
[debug]       Load.apply: finalTransforms took 10.3825ms
[debug]       Load.apply: config.delegates took 0.4459ms
[debug]       Load.apply: Def.make(settings)... took 178.4797ms
[debug]       Load.apply: structureIndex took 28.6821ms
[debug]       Load.apply: mkStreams took 0.0071ms
[info] loading project definition from E:\Escritorio\Nova\abt-bancos-zona-qua\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 947.5974ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory E:\Escritorio\Nova\abt-bancos-zona-qua
[debug]       Load.loadUnit: mkEval took 0.2823ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Escritorio\Nova\abt-bancos-zona-qua, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7745 ms
[info] loading settings for project abt-bancos-zona-qua from build.sbt ...
[debug]         Load.resolveProject(abt-bancos-zona-qua) took 37.0565ms
[debug]       Load.loadTransitive: finalizeProject(Project(id abt-bancos-zona-qua, base: E:\Escritorio\Nova\abt-bancos-zona-qua, plugins: List(<none>))) took 39.9677ms
[debug] [Loading] Done in E:\Escritorio\Nova\abt-bancos-zona-qua, returning: (abt-bancos-zona-qua)
[debug]     Load.loadUnit: loadedProjectsRaw took 140.2393ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.0464ms
[debug]   Load.loadUnit(file:/E:/Escritorio/Nova/abt-bancos-zona-qua/, ...) took 1108.9121ms
[debug] Load.apply: load took 1110.733ms
[debug] Load.apply: resolveProjects took 0.1184ms
[debug] Load.apply: finalTransforms took 28.0809ms
[debug] Load.apply: config.delegates took 0.2704ms
[debug] Load.apply: Def.make(settings)... took 75.7855ms
[debug] Load.apply: structureIndex took 19.9971ms
[debug] Load.apply: mkStreams took 0.0092ms
[info] set current project to abt-bancos-zona-qua (in build file:/E:/Escritorio/Nova/abt-bancos-zona-qua/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53339 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53339, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to abt-bancos-zona-qua (in build file:/E:/Escritorio/Nova/abt-bancos-zona-qua/)
[debug] > Exec(idea-shell, None, None)
